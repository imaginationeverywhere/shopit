{"version":3,"sources":["../node_modules/react-sticky-box/dist/es/index.js","../node_modules/react-sticky-box/node_modules/@babel/runtime/helpers/inheritsLoose.js","../node_modules/react-sticky-box/node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js"],"names":["stickyProp","CSS","supports","passiveArg","opts","Object","defineProperty","get","passive","window","addEventListener","removeEventListener","e","StickyBox","_React$Component","props","_this","call","this","addListener","element","event","handler","unsubscribes","push","addResizeObserver","node","ro","observe","disconnect","registerContainerRef","n","scrollPane","parent","parentElement","overflowYVal","getComputedStyle","getPropertyValue","document","body","getScrollParent","latestScrollY","scrollY","scrollTop","handleScroll","handleWindowResize","handleScrollPaneResize","parentNode","handleParentNodeResize","handleNodeResize","initial","forEach","fn","getCurrentOffset","mode","offset","_this$props","offsetTop","offsetBottom","Math","max","scrollPaneOffset","naturalTop","viewPortHeight","nodeHeight","innerHeight","offsetHeight","firstChild","offsetParent","getBoundingClientRect","top","computedParentStyle","parentPaddingTop","parseInt","parentPaddingBottom","target","current","offsetTill","oldParentHeight","parentHeight","height","bottom","changeMode","changeToStickyBottomIfBoxTooLow","Number","POSITIVE_INFINITY","_temp","prevHeight","_this$props2","undefined","diff","lowestPossible","nextOffset","min","_this$props3","scrollDelta","_proto","prototype","newMode","_this$props4","onChangeMode","style","position","nextBottom","render","_this$props5","children","className","createElement","ref","Component","defaultProps","setPrototypeOf","module","exports","subClass","superClass","create","constructor","__esModule","_setPrototypeOf","o","p","__proto__","MapShim","Map","getIndex","arr","key","result","some","entry","index","class_1","__entries__","length","enumerable","configurable","set","value","delete","entries","splice","has","clear","callback","ctx","_i","_a","isBrowser","global$1","global","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","attributes","childList","characterData","subtree","_b","propertyName","getInstance","instance_","defineConfigurable","keys","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","arguments","reduce","size","getHTMLElementContentRect","clientWidth","clientHeight","paddings","positions_1","getPaddings","horizPad","left","right","vertPad","width","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","contentRect","Constr","DOMRectReadOnly","createReadOnlyRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","observation","map","WeakMap","ResizeObserver","method","apply"],"mappings":"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","file":"static/js/15.6669d120.chunk.js","sourcesContent":["import _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nvar getScrollParent = function getScrollParent(node) {\n  var parent = node;\n\n  while (parent = parent.parentElement) {\n    var overflowYVal = getComputedStyle(parent, null).getPropertyValue(\"overflow-y\");\n    if (parent === document.body) return window;\n    if (overflowYVal === \"auto\" || overflowYVal === \"scroll\") return parent;\n  }\n\n  return window;\n};\n\nvar offsetTill = function offsetTill(node, target) {\n  var current = node;\n  var offset = 0; // If target is not an offsetParent itself, subtract its offsetTop and set correct target\n\n  if (target.firstChild && target.firstChild.offsetParent !== target) {\n    offset += node.offsetTop - target.offsetTop;\n    target = node.offsetParent;\n    offset += -node.offsetTop;\n  }\n\n  do {\n    offset += current.offsetTop;\n    current = current.offsetParent;\n  } while (current && current !== target);\n\n  return offset;\n};\n\nvar stickyProp = null;\n\nif (typeof CSS !== \"undefined\" && CSS.supports) {\n  if (CSS.supports(\"position\", \"sticky\")) stickyProp = \"sticky\";else if (CSS.supports(\"position\", \"-webkit-sticky\")) stickyProp = \"-webkit-sticky\";\n} // Inspired by https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n\n\nvar passiveArg = false;\n\ntry {\n  var opts = Object.defineProperty({}, \"passive\", {\n    // eslint-disable-next-line getter-return\n    get: function get() {\n      passiveArg = {\n        passive: true\n      };\n    }\n  });\n  window.addEventListener(\"testPassive\", null, opts);\n  window.removeEventListener(\"testPassive\", null, opts);\n} catch (e) {}\n\nvar StickyBox = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(StickyBox, _React$Component);\n\n  function StickyBox(props) {\n    var _this = _React$Component.call(this, props) || this;\n\n    _this.addListener = function (element, event, handler, passive) {\n      element.addEventListener(event, handler, passive);\n\n      _this.unsubscribes.push(function () {\n        return element.removeEventListener(event, handler);\n      });\n    };\n\n    _this.addResizeObserver = function (node, handler) {\n      var ro = new ResizeObserver(handler);\n      ro.observe(node);\n\n      _this.unsubscribes.push(function () {\n        return ro.disconnect();\n      });\n    };\n\n    _this.registerContainerRef = function (n) {\n      if (!stickyProp) return;\n      _this.node = n;\n\n      if (n) {\n        _this.scrollPane = getScrollParent(_this.node);\n        _this.latestScrollY = _this.scrollPane === window ? window.scrollY : _this.scrollPane.scrollTop;\n\n        _this.addListener(_this.scrollPane, \"scroll\", _this.handleScroll, passiveArg);\n\n        _this.addListener(_this.scrollPane, \"mousewheel\", _this.handleScroll, passiveArg);\n\n        if (_this.scrollPane === window) {\n          _this.addListener(window, \"resize\", _this.handleWindowResize);\n\n          _this.handleWindowResize();\n        } else {\n          _this.addResizeObserver(_this.scrollPane, _this.handleScrollPaneResize);\n\n          _this.handleScrollPaneResize();\n        }\n\n        _this.addResizeObserver(_this.node.parentNode, _this.handleParentNodeResize);\n\n        _this.handleParentNodeResize();\n\n        _this.addResizeObserver(_this.node, _this.handleNodeResize);\n\n        _this.handleNodeResize({\n          initial: true\n        });\n\n        _this.initial();\n      } else {\n        _this.unsubscribes.forEach(function (fn) {\n          return fn();\n        });\n\n        _this.unsubscribes = [];\n        _this.scrollPane = null;\n      }\n    };\n\n    _this.getCurrentOffset = function () {\n      if (_this.mode === \"relative\") return _this.offset;\n      var _this$props = _this.props,\n          offsetTop = _this$props.offsetTop,\n          offsetBottom = _this$props.offsetBottom;\n\n      if (_this.mode === \"stickyTop\") {\n        return Math.max(0, _this.scrollPaneOffset + _this.latestScrollY - _this.naturalTop + offsetTop);\n      }\n\n      if (_this.mode === \"stickyBottom\") {\n        return Math.max(0, _this.scrollPaneOffset + _this.latestScrollY + _this.viewPortHeight - (_this.naturalTop + _this.nodeHeight + offsetBottom));\n      }\n    };\n\n    _this.handleWindowResize = function () {\n      _this.viewPortHeight = window.innerHeight;\n      _this.scrollPaneOffset = 0;\n\n      _this.handleScroll();\n    };\n\n    _this.handleScrollPaneResize = function () {\n      _this.viewPortHeight = _this.scrollPane.offsetHeight;\n\n      if (process.env.NODE_ENV !== \"production\" && _this.viewPortHeight === 0) {\n        console.warn(\"react-sticky-box's scroll pane has a height of 0. This seems odd. Please check this node:\", _this.scrollPane);\n      } // Only applicable if scrollPane is an offsetParent\n\n\n      if (_this.scrollPane.firstChild.offsetParent === _this.scrollPane) {\n        _this.scrollPaneOffset = _this.scrollPane.getBoundingClientRect().top;\n      } else {\n        _this.scrollPaneOffset = 0;\n      }\n\n      _this.handleScroll();\n    };\n\n    _this.handleParentNodeResize = function () {\n      var parentNode = _this.node.parentNode;\n      var computedParentStyle = getComputedStyle(parentNode, null);\n      var parentPaddingTop = parseInt(computedParentStyle.getPropertyValue(\"padding-top\"), 10);\n      var parentPaddingBottom = parseInt(computedParentStyle.getPropertyValue(\"padding-bottom\"), 10);\n      _this.naturalTop = offsetTill(parentNode, _this.scrollPane) + parentPaddingTop + _this.scrollPaneOffset;\n      var oldParentHeight = _this.parentHeight;\n      _this.parentHeight = parentNode.getBoundingClientRect().height - (parentPaddingTop + parentPaddingBottom);\n\n      if (_this.mode === \"relative\") {\n        if (_this.props.bottom) {\n          _this.changeMode(\"relative\");\n        } else {\n          // If parent height decreased...\n          if (oldParentHeight > _this.parentHeight) {\n            _this.changeToStickyBottomIfBoxTooLow(_this.latestScrollY);\n          }\n        }\n      }\n\n      if (oldParentHeight !== _this.parentHeight && _this.mode === \"relative\") {\n        _this.latestScrollY = Number.POSITIVE_INFINITY;\n\n        _this.handleScroll();\n      }\n    };\n\n    _this.handleNodeResize = function (_temp) {\n      var _ref = _temp === void 0 ? {} : _temp,\n          initial = _ref.initial;\n\n      var prevHeight = _this.nodeHeight;\n      _this.nodeHeight = _this.node.getBoundingClientRect().height;\n\n      if (!initial && prevHeight !== _this.nodeHeight) {\n        var _this$props2 = _this.props,\n            offsetTop = _this$props2.offsetTop,\n            offsetBottom = _this$props2.offsetBottom,\n            bottom = _this$props2.bottom;\n\n        if (_this.nodeHeight + offsetTop + offsetBottom <= _this.viewPortHeight) {\n          // Just make it sticky if node smaller than viewport\n          _this.mode = undefined;\n\n          _this.initial();\n        } else {\n          var diff = prevHeight - _this.nodeHeight;\n          var lowestPossible = _this.parentHeight - _this.nodeHeight;\n          var nextOffset = Math.min(lowestPossible, _this.getCurrentOffset() + (bottom ? diff : 0));\n          _this.offset = Math.max(0, nextOffset);\n          if (!bottom || _this.mode !== \"stickyBottom\") _this.changeMode(\"relative\");\n        }\n      }\n    };\n\n    _this.handleScroll = function () {\n      var _this$props3 = _this.props,\n          offsetTop = _this$props3.offsetTop,\n          offsetBottom = _this$props3.offsetBottom;\n      var scrollY = _this.scrollPane === window ? window.scrollY : _this.scrollPane.scrollTop;\n      if (scrollY === _this.latestScrollY) return;\n\n      if (_this.nodeHeight + offsetTop + offsetBottom <= _this.viewPortHeight) {\n        // Just make it sticky if node smaller than viewport\n        _this.initial();\n\n        _this.latestScrollY = scrollY;\n        return;\n      }\n\n      var scrollDelta = scrollY - _this.latestScrollY;\n      _this.offset = _this.getCurrentOffset();\n\n      if (scrollDelta > 0) {\n        // scroll down\n        if (_this.mode === \"stickyTop\") {\n          if (scrollY + _this.scrollPaneOffset + offsetTop > _this.naturalTop) {\n            if (scrollY + _this.scrollPaneOffset + _this.viewPortHeight <= _this.naturalTop + _this.nodeHeight + _this.offset + offsetBottom) {\n              _this.changeMode(\"relative\");\n            } else {\n              _this.changeMode(\"stickyBottom\");\n            }\n          }\n        } else if (_this.mode === \"relative\") {\n          _this.changeToStickyBottomIfBoxTooLow(scrollY);\n        }\n      } else {\n        // scroll up\n        if (_this.mode === \"stickyBottom\") {\n          if (_this.scrollPaneOffset + scrollY + _this.viewPortHeight < _this.naturalTop + _this.parentHeight + offsetBottom) {\n            if (_this.scrollPaneOffset + scrollY + offsetTop >= _this.naturalTop + _this.offset) {\n              _this.changeMode(\"relative\");\n            } else {\n              _this.changeMode(\"stickyTop\");\n            }\n          }\n        } else if (_this.mode === \"relative\") {\n          if (_this.scrollPaneOffset + scrollY + offsetTop < _this.naturalTop + _this.offset) {\n            _this.changeMode(\"stickyTop\");\n          }\n        }\n      }\n\n      _this.latestScrollY = scrollY;\n    };\n\n    if (props.offset && process.env.NODE_ENV !== \"production\") {\n      console.warn(\"react-sticky-box's \\\"offset\\\" prop is deprecated. Please use \\\"offsetTop\\\" instead. It'll be removed in v0.8.\");\n    }\n\n    _this.unsubscribes = [];\n    return _this;\n  }\n\n  var _proto = StickyBox.prototype;\n\n  _proto.changeMode = function changeMode(newMode) {\n    var _this$props4 = this.props,\n        onChangeMode = _this$props4.onChangeMode,\n        offsetTop = _this$props4.offsetTop,\n        offsetBottom = _this$props4.offsetBottom,\n        bottom = _this$props4.bottom;\n    if (this.mode !== newMode) onChangeMode(this.mode, newMode);\n    this.mode = newMode;\n\n    if (newMode === \"relative\") {\n      this.node.style.position = \"relative\";\n\n      if (bottom) {\n        var nextBottom = Math.max(0, this.parentHeight - this.nodeHeight - this.offset);\n        this.node.style.bottom = nextBottom + \"px\";\n      } else {\n        this.node.style.top = this.offset + \"px\";\n      }\n    } else {\n      this.node.style.position = stickyProp;\n\n      if (newMode === \"stickyBottom\") {\n        if (bottom) {\n          this.node.style.bottom = offsetBottom + \"px\";\n        } else {\n          this.node.style.top = this.viewPortHeight - this.nodeHeight - offsetBottom + \"px\";\n        }\n      } else {\n        // stickyTop\n        if (bottom) {\n          this.node.style.bottom = this.viewPortHeight - this.nodeHeight - offsetBottom + \"px\";\n        } else {\n          this.node.style.top = offsetTop + \"px\";\n        }\n      }\n    }\n\n    this.offset = this.getCurrentOffset();\n  };\n\n  _proto.initial = function initial() {\n    var bottom = this.props.bottom;\n\n    if (bottom) {\n      if (this.mode !== \"stickyBottom\") this.changeMode(\"stickyBottom\");\n    } else {\n      if (this.mode !== \"stickyTop\") this.changeMode(\"stickyTop\");\n    }\n  };\n\n  _proto.changeToStickyBottomIfBoxTooLow = function changeToStickyBottomIfBoxTooLow(scrollY) {\n    var offsetBottom = this.props.offsetBottom;\n\n    if (scrollY + this.scrollPaneOffset + this.viewPortHeight >= this.naturalTop + this.nodeHeight + this.offset + offsetBottom) {\n      this.changeMode(\"stickyBottom\");\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props5 = this.props,\n        children = _this$props5.children,\n        className = _this$props5.className,\n        style = _this$props5.style;\n    return React.createElement(\"div\", {\n      className: className,\n      style: style,\n      ref: this.registerContainerRef\n    }, children);\n  };\n\n  return StickyBox;\n}(React.Component);\n\nexport { StickyBox as default };\nStickyBox.defaultProps = {\n  onChangeMode: function onChangeMode() {},\n  offsetTop: 0,\n  offsetBottom: 0\n};\nprocess.env.NODE_ENV !== \"production\" ? StickyBox.propTypes = {\n  onChangeMode: PropTypes.func,\n  offsetTop: PropTypes.number,\n  offsetBottom: PropTypes.number,\n  bottom: PropTypes.bool\n} : void 0;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inheritsLoose;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = function () {\n  if (typeof Map !== 'undefined') {\n    return Map;\n  }\n  /**\r\n   * Returns index in provided array that matches the specified key.\r\n   *\r\n   * @param {Array<Array>} arr\r\n   * @param {*} key\r\n   * @returns {number}\r\n   */\n\n\n  function getIndex(arr, key) {\n    var result = -1;\n    arr.some(function (entry, index) {\n      if (entry[0] === key) {\n        result = index;\n        return true;\n      }\n\n      return false;\n    });\n    return result;\n  }\n\n  return (\n    /** @class */\n    function () {\n      function class_1() {\n        this.__entries__ = [];\n      }\n\n      Object.defineProperty(class_1.prototype, \"size\", {\n        /**\r\n         * @returns {boolean}\r\n         */\n        get: function get() {\n          return this.__entries__.length;\n        },\n        enumerable: true,\n        configurable: true\n      });\n      /**\r\n       * @param {*} key\r\n       * @returns {*}\r\n       */\n\n      class_1.prototype.get = function (key) {\n        var index = getIndex(this.__entries__, key);\n        var entry = this.__entries__[index];\n        return entry && entry[1];\n      };\n      /**\r\n       * @param {*} key\r\n       * @param {*} value\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.set = function (key, value) {\n        var index = getIndex(this.__entries__, key);\n\n        if (~index) {\n          this.__entries__[index][1] = value;\n        } else {\n          this.__entries__.push([key, value]);\n        }\n      };\n      /**\r\n       * @param {*} key\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.delete = function (key) {\n        var entries = this.__entries__;\n        var index = getIndex(entries, key);\n\n        if (~index) {\n          entries.splice(index, 1);\n        }\n      };\n      /**\r\n       * @param {*} key\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.has = function (key) {\n        return !!~getIndex(this.__entries__, key);\n      };\n      /**\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.clear = function () {\n        this.__entries__.splice(0);\n      };\n      /**\r\n       * @param {Function} callback\r\n       * @param {*} [ctx=null]\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.forEach = function (callback, ctx) {\n        if (ctx === void 0) {\n          ctx = null;\n        }\n\n        for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\n          var entry = _a[_i];\n          callback.call(ctx, entry[1], entry[0]);\n        }\n      };\n\n      return class_1;\n    }()\n  );\n}();\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\n\n\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document; // Returns global object of a current environment.\n\nvar global$1 = function () {\n  if (typeof global !== 'undefined' && global.Math === Math) {\n    return global;\n  }\n\n  if (typeof self !== 'undefined' && self.Math === Math) {\n    return self;\n  }\n\n  if (typeof window !== 'undefined' && window.Math === Math) {\n    return window;\n  } // eslint-disable-next-line no-new-func\n\n\n  return Function('return this')();\n}();\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\n\n\nvar requestAnimationFrame$1 = function () {\n  if (typeof requestAnimationFrame === 'function') {\n    // It's required to use a bounded function because IE sometimes throws\n    // an \"Invalid calling object\" error if rAF is invoked without the global\n    // object on the left hand side.\n    return requestAnimationFrame.bind(global$1);\n  }\n\n  return function (callback) {\n    return setTimeout(function () {\n      return callback(Date.now());\n    }, 1000 / 60);\n  };\n}(); // Defines minimum timeout before adding a trailing call.\n\n\nvar trailingTimeout = 2;\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\n\nfunction throttle(callback, delay) {\n  var leadingCall = false,\n      trailingCall = false,\n      lastCallTime = 0;\n  /**\r\n   * Invokes the original callback function and schedules new invocation if\r\n   * the \"proxy\" was called during current request.\r\n   *\r\n   * @returns {void}\r\n   */\n\n  function resolvePending() {\n    if (leadingCall) {\n      leadingCall = false;\n      callback();\n    }\n\n    if (trailingCall) {\n      proxy();\n    }\n  }\n  /**\r\n   * Callback invoked after the specified delay. It will further postpone\r\n   * invocation of the original function delegating it to the\r\n   * requestAnimationFrame.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  function timeoutCallback() {\n    requestAnimationFrame$1(resolvePending);\n  }\n  /**\r\n   * Schedules invocation of the original function.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  function proxy() {\n    var timeStamp = Date.now();\n\n    if (leadingCall) {\n      // Reject immediately following calls.\n      if (timeStamp - lastCallTime < trailingTimeout) {\n        return;\n      } // Schedule new call to be in invoked when the pending one is resolved.\n      // This is important for \"transitions\" which never actually start\n      // immediately so there is a chance that we might miss one if change\n      // happens amids the pending invocation.\n\n\n      trailingCall = true;\n    } else {\n      leadingCall = true;\n      trailingCall = false;\n      setTimeout(timeoutCallback, delay);\n    }\n\n    lastCallTime = timeStamp;\n  }\n\n  return proxy;\n} // Minimum delay before invoking the update of observers.\n\n\nvar REFRESH_DELAY = 20; // A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\n\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight']; // Check if MutationObserver is available.\n\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\n\nvar ResizeObserverController =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of ResizeObserverController.\r\n   *\r\n   * @private\r\n   */\n  function ResizeObserverController() {\n    /**\r\n     * Indicates whether DOM listeners have been added.\r\n     *\r\n     * @private {boolean}\r\n     */\n    this.connected_ = false;\n    /**\r\n     * Tells that controller has subscribed for Mutation Events.\r\n     *\r\n     * @private {boolean}\r\n     */\n\n    this.mutationEventsAdded_ = false;\n    /**\r\n     * Keeps reference to the instance of MutationObserver.\r\n     *\r\n     * @private {MutationObserver}\r\n     */\n\n    this.mutationsObserver_ = null;\n    /**\r\n     * A list of connected observers.\r\n     *\r\n     * @private {Array<ResizeObserverSPI>}\r\n     */\n\n    this.observers_ = [];\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n  }\n  /**\r\n   * Adds observer to observers list.\r\n   *\r\n   * @param {ResizeObserverSPI} observer - Observer to be added.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n      this.observers_.push(observer);\n    } // Add listeners if they haven't been added yet.\n\n\n    if (!this.connected_) {\n      this.connect_();\n    }\n  };\n  /**\r\n   * Removes observer from observers list.\r\n   *\r\n   * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer); // Remove observer if it's present in registry.\n\n    if (~index) {\n      observers.splice(index, 1);\n    } // Remove listeners if controller has no connected observers.\n\n\n    if (!observers.length && this.connected_) {\n      this.disconnect_();\n    }\n  };\n  /**\r\n   * Invokes the update of observers. It will continue running updates insofar\r\n   * it detects changes.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_(); // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n\n    if (changesDetected) {\n      this.refresh();\n    }\n  };\n  /**\r\n   * Updates every observer from observers list and notifies them of queued\r\n   * entries.\r\n   *\r\n   * @private\r\n   * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n   *      dimensions of it's elements.\r\n   */\n\n\n  ResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n      return observer.gatherActive(), observer.hasActive();\n    }); // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n\n    activeObservers.forEach(function (observer) {\n      return observer.broadcastActive();\n    });\n    return activeObservers.length > 0;\n  };\n  /**\r\n   * Initializes DOM listeners.\r\n   *\r\n   * @private\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n      return;\n    } // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n\n\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n    window.addEventListener('resize', this.refresh);\n\n    if (mutationObserverSupported) {\n      this.mutationsObserver_ = new MutationObserver(this.refresh);\n      this.mutationsObserver_.observe(document, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    } else {\n      document.addEventListener('DOMSubtreeModified', this.refresh);\n      this.mutationEventsAdded_ = true;\n    }\n\n    this.connected_ = true;\n  };\n  /**\r\n   * Removes DOM listeners.\r\n   *\r\n   * @private\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n      return;\n    }\n\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n\n    if (this.mutationsObserver_) {\n      this.mutationsObserver_.disconnect();\n    }\n\n    if (this.mutationEventsAdded_) {\n      document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n  };\n  /**\r\n   * \"Transitionend\" event handler.\r\n   *\r\n   * @private\r\n   * @param {TransitionEvent} event\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\n    var _b = _a.propertyName,\n        propertyName = _b === void 0 ? '' : _b; // Detect whether transition may affect dimensions of an element.\n\n    var isReflowProperty = transitionKeys.some(function (key) {\n      return !!~propertyName.indexOf(key);\n    });\n\n    if (isReflowProperty) {\n      this.refresh();\n    }\n  };\n  /**\r\n   * Returns instance of the ResizeObserverController.\r\n   *\r\n   * @returns {ResizeObserverController}\r\n   */\n\n\n  ResizeObserverController.getInstance = function () {\n    if (!this.instance_) {\n      this.instance_ = new ResizeObserverController();\n    }\n\n    return this.instance_;\n  };\n  /**\r\n   * Holds reference to the controller's instance.\r\n   *\r\n   * @private {ResizeObserverController}\r\n   */\n\n\n  ResizeObserverController.instance_ = null;\n  return ResizeObserverController;\n}();\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\n\n\nvar defineConfigurable = function defineConfigurable(target, props) {\n  for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\n    var key = _a[_i];\n    Object.defineProperty(target, key, {\n      value: props[key],\n      enumerable: false,\n      writable: false,\n      configurable: true\n    });\n  }\n\n  return target;\n};\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\n\n\nvar getWindowOf = function getWindowOf(target) {\n  // Assume that the element is an instance of Node, which means that it\n  // has the \"ownerDocument\" property from which we can retrieve a\n  // corresponding global object.\n  var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView; // Return the local global object if it's not possible extract one from\n  // provided element.\n\n  return ownerGlobal || global$1;\n}; // Placeholder of an empty content rectangle.\n\n\nvar emptyRect = createRectInit(0, 0, 0, 0);\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\n\nfunction toFloat(value) {\n  return parseFloat(value) || 0;\n}\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\n\n\nfunction getBordersSize(styles) {\n  var positions = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    positions[_i - 1] = arguments[_i];\n  }\n\n  return positions.reduce(function (size, position) {\n    var value = styles['border-' + position + '-width'];\n    return size + toFloat(value);\n  }, 0);\n}\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\n\n\nfunction getPaddings(styles) {\n  var positions = ['top', 'right', 'bottom', 'left'];\n  var paddings = {};\n\n  for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\n    var position = positions_1[_i];\n    var value = styles['padding-' + position];\n    paddings[position] = toFloat(value);\n  }\n\n  return paddings;\n}\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getSVGContentRect(target) {\n  var bbox = target.getBBox();\n  return createRectInit(0, 0, bbox.width, bbox.height);\n}\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getHTMLElementContentRect(target) {\n  // Client width & height properties can't be\n  // used exclusively as they provide rounded values.\n  var clientWidth = target.clientWidth,\n      clientHeight = target.clientHeight; // By this condition we can catch all non-replaced inline, hidden and\n  // detached elements. Though elements with width & height properties less\n  // than 0.5 will be discarded as well.\n  //\n  // Without it we would need to implement separate methods for each of\n  // those cases and it's not possible to perform a precise and performance\n  // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n  // gives wrong results for elements with width & height less than 0.5.\n\n  if (!clientWidth && !clientHeight) {\n    return emptyRect;\n  }\n\n  var styles = getWindowOf(target).getComputedStyle(target);\n  var paddings = getPaddings(styles);\n  var horizPad = paddings.left + paddings.right;\n  var vertPad = paddings.top + paddings.bottom; // Computed styles of width & height are being used because they are the\n  // only dimensions available to JS that contain non-rounded values. It could\n  // be possible to utilize the getBoundingClientRect if only it's data wasn't\n  // affected by CSS transformations let alone paddings, borders and scroll bars.\n\n  var width = toFloat(styles.width),\n      height = toFloat(styles.height); // Width & height include paddings and borders when the 'border-box' box\n  // model is applied (except for IE).\n\n  if (styles.boxSizing === 'border-box') {\n    // Following conditions are required to handle Internet Explorer which\n    // doesn't include paddings and borders to computed CSS dimensions.\n    //\n    // We can say that if CSS dimensions + paddings are equal to the \"client\"\n    // properties then it's either IE, and thus we don't need to subtract\n    // anything, or an element merely doesn't have paddings/borders styles.\n    if (Math.round(width + horizPad) !== clientWidth) {\n      width -= getBordersSize(styles, 'left', 'right') + horizPad;\n    }\n\n    if (Math.round(height + vertPad) !== clientHeight) {\n      height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n    }\n  } // Following steps can't be applied to the document's root element as its\n  // client[Width/Height] properties represent viewport area of the window.\n  // Besides, it's as well not necessary as the <html> itself neither has\n  // rendered scroll bars nor it can be clipped.\n\n\n  if (!isDocumentElement(target)) {\n    // In some browsers (only in Firefox, actually) CSS width & height\n    // include scroll bars size which can be removed at this step as scroll\n    // bars are the only difference between rounded dimensions + paddings\n    // and \"client\" properties, though that is not always true in Chrome.\n    var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n    var horizScrollbar = Math.round(height + vertPad) - clientHeight; // Chrome has a rather weird rounding of \"client\" properties.\n    // E.g. for an element with content width of 314.2px it sometimes gives\n    // the client width of 315px and for the width of 314.7px it may give\n    // 314px. And it doesn't happen all the time. So just ignore this delta\n    // as a non-relevant.\n\n    if (Math.abs(vertScrollbar) !== 1) {\n      width -= vertScrollbar;\n    }\n\n    if (Math.abs(horizScrollbar) !== 1) {\n      height -= horizScrollbar;\n    }\n  }\n\n  return createRectInit(paddings.left, paddings.top, width, height);\n}\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\n\n\nvar isSVGGraphicsElement = function () {\n  // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n  // interface.\n  if (typeof SVGGraphicsElement !== 'undefined') {\n    return function (target) {\n      return target instanceof getWindowOf(target).SVGGraphicsElement;\n    };\n  } // If it's so, then check that element is at least an instance of the\n  // SVGElement and that it has the \"getBBox\" method.\n  // eslint-disable-next-line no-extra-parens\n\n\n  return function (target) {\n    return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function';\n  };\n}();\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\n\n\nfunction isDocumentElement(target) {\n  return target === getWindowOf(target).document.documentElement;\n}\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getContentRect(target) {\n  if (!isBrowser) {\n    return emptyRect;\n  }\n\n  if (isSVGGraphicsElement(target)) {\n    return getSVGContentRect(target);\n  }\n\n  return getHTMLElementContentRect(target);\n}\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\n\n\nfunction createReadOnlyRect(_a) {\n  var x = _a.x,\n      y = _a.y,\n      width = _a.width,\n      height = _a.height; // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n\n  var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n  var rect = Object.create(Constr.prototype); // Rectangle's properties are not writable and non-enumerable.\n\n  defineConfigurable(rect, {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    top: y,\n    right: x + width,\n    bottom: height + y,\n    left: x\n  });\n  return rect;\n}\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction createRectInit(x, y, width, height) {\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height\n  };\n}\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\n\n\nvar ResizeObservation =\n/** @class */\nfunction () {\n  /**\r\n   * Creates an instance of ResizeObservation.\r\n   *\r\n   * @param {Element} target - Element to be observed.\r\n   */\n  function ResizeObservation(target) {\n    /**\r\n     * Broadcasted width of content rectangle.\r\n     *\r\n     * @type {number}\r\n     */\n    this.broadcastWidth = 0;\n    /**\r\n     * Broadcasted height of content rectangle.\r\n     *\r\n     * @type {number}\r\n     */\n\n    this.broadcastHeight = 0;\n    /**\r\n     * Reference to the last observed content rectangle.\r\n     *\r\n     * @private {DOMRectInit}\r\n     */\n\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n    this.target = target;\n  }\n  /**\r\n   * Updates content rectangle and tells whether it's width or height properties\r\n   * have changed since the last broadcast.\r\n   *\r\n   * @returns {boolean}\r\n   */\n\n\n  ResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n    this.contentRect_ = rect;\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n  };\n  /**\r\n   * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n   * from the corresponding properties of the last observed content rectangle.\r\n   *\r\n   * @returns {DOMRectInit} Last observed content rectangle.\r\n   */\n\n\n  ResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n    return rect;\n  };\n\n  return ResizeObservation;\n}();\n\nvar ResizeObserverEntry =\n/** @class */\nfunction () {\n  /**\r\n   * Creates an instance of ResizeObserverEntry.\r\n   *\r\n   * @param {Element} target - Element that is being observed.\r\n   * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n   */\n  function ResizeObserverEntry(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit); // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n\n    defineConfigurable(this, {\n      target: target,\n      contentRect: contentRect\n    });\n  }\n\n  return ResizeObserverEntry;\n}();\n\nvar ResizeObserverSPI =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of ResizeObserver.\r\n   *\r\n   * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n   *      when one of the observed elements changes it's content dimensions.\r\n   * @param {ResizeObserverController} controller - Controller instance which\r\n   *      is responsible for the updates of observer.\r\n   * @param {ResizeObserver} callbackCtx - Reference to the public\r\n   *      ResizeObserver instance which will be passed to callback function.\r\n   */\n  function ResizeObserverSPI(callback, controller, callbackCtx) {\n    /**\r\n     * Collection of resize observations that have detected changes in dimensions\r\n     * of elements.\r\n     *\r\n     * @private {Array<ResizeObservation>}\r\n     */\n    this.activeObservations_ = [];\n    /**\r\n     * Registry of the ResizeObservation instances.\r\n     *\r\n     * @private {Map<Element, ResizeObservation>}\r\n     */\n\n    this.observations_ = new MapShim();\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n  }\n  /**\r\n   * Starts observing provided element.\r\n   *\r\n   * @param {Element} target - Element to be observed.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    } // Do nothing if current environment doesn't have the Element interface.\n\n\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n      return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n      throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_; // Do nothing if element is already being observed.\n\n    if (observations.has(target)) {\n      return;\n    }\n\n    observations.set(target, new ResizeObservation(target));\n    this.controller_.addObserver(this); // Force the update of observations.\n\n    this.controller_.refresh();\n  };\n  /**\r\n   * Stops observing provided element.\r\n   *\r\n   * @param {Element} target - Element to stop observing.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    } // Do nothing if current environment doesn't have the Element interface.\n\n\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n      return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n      throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_; // Do nothing if element is not being observed.\n\n    if (!observations.has(target)) {\n      return;\n    }\n\n    observations.delete(target);\n\n    if (!observations.size) {\n      this.controller_.removeObserver(this);\n    }\n  };\n  /**\r\n   * Stops observing all elements.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n  };\n  /**\r\n   * Collects observation instances the associated element of which has changed\r\n   * it's content rectangle.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.gatherActive = function () {\n    var _this = this;\n\n    this.clearActive();\n    this.observations_.forEach(function (observation) {\n      if (observation.isActive()) {\n        _this.activeObservations_.push(observation);\n      }\n    });\n  };\n  /**\r\n   * Invokes initial callback function with a list of ResizeObserverEntry\r\n   * instances collected from active resize observations.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n      return;\n    }\n\n    var ctx = this.callbackCtx_; // Create ResizeObserverEntry instance for every active observation.\n\n    var entries = this.activeObservations_.map(function (observation) {\n      return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n  };\n  /**\r\n   * Clears the collection of active observations.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n  };\n  /**\r\n   * Tells whether observer has active observations.\r\n   *\r\n   * @returns {boolean}\r\n   */\n\n\n  ResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n  };\n\n  return ResizeObserverSPI;\n}(); // Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\n\n\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\n\nvar ResizeObserver =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of ResizeObserver.\r\n   *\r\n   * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n   *      dimensions of the observed elements change.\r\n   */\n  function ResizeObserver(callback) {\n    if (!(this instanceof ResizeObserver)) {\n      throw new TypeError('Cannot call a class as a function.');\n    }\n\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n    observers.set(this, observer);\n  }\n\n  return ResizeObserver;\n}(); // Expose public methods of ResizeObserver.\n\n\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n  ResizeObserver.prototype[method] = function () {\n    var _a;\n\n    return (_a = observers.get(this))[method].apply(_a, arguments);\n  };\n});\n\nvar index = function () {\n  // Export existing implementation if available.\n  if (typeof global$1.ResizeObserver !== 'undefined') {\n    return global$1.ResizeObserver;\n  }\n\n  return ResizeObserver;\n}();\n\nexport default index;"],"sourceRoot":""}