{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/react-sticky-box/dist/es/index.js","../node_modules/react-sticky-box/node_modules/@babel/runtime/helpers/inheritsLoose.js","../node_modules/react-sticky-box/node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","stickyProp","CSS","supports","passiveArg","opts","defineProperty","get","passive","window","addEventListener","removeEventListener","e","StickyBox","_React$Component","props","_this","this","addListener","element","event","handler","unsubscribes","push","addResizeObserver","node","ro","observe","disconnect","registerContainerRef","n","scrollPane","parent","parentElement","overflowYVal","getComputedStyle","getPropertyValue","document","body","getScrollParent","latestScrollY","scrollY","scrollTop","handleScroll","handleWindowResize","handleScrollPaneResize","parentNode","handleParentNodeResize","handleNodeResize","initial","forEach","fn","getCurrentOffset","mode","offset","_this$props","offsetTop","offsetBottom","Math","max","scrollPaneOffset","naturalTop","viewPortHeight","nodeHeight","innerHeight","offsetHeight","firstChild","offsetParent","getBoundingClientRect","top","computedParentStyle","parentPaddingTop","parseInt","parentPaddingBottom","current","offsetTill","oldParentHeight","parentHeight","height","bottom","changeMode","changeToStickyBottomIfBoxTooLow","Number","POSITIVE_INFINITY","_temp","prevHeight","_this$props2","undefined","diff","lowestPossible","nextOffset","min","_this$props3","scrollDelta","_proto","newMode","_this$props4","onChangeMode","style","position","nextBottom","render","_this$props5","children","className","createElement","ref","Component","defaultProps","setPrototypeOf","module","exports","subClass","superClass","create","constructor","__esModule","_setPrototypeOf","o","p","__proto__","MapShim","Map","getIndex","arr","result","some","entry","index","class_1","__entries__","enumerable","configurable","set","value","delete","entries","splice","has","clear","callback","ctx","_i","_a","isBrowser","global$1","global","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","attributes","childList","characterData","subtree","_b","propertyName","getInstance","instance_","defineConfigurable","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","arguments","reduce","size","getHTMLElementContentRect","clientWidth","clientHeight","paddings","positions_1","getPaddings","horizPad","left","right","vertPad","width","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","contentRect","Constr","DOMRectReadOnly","createReadOnlyRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","observation","map","WeakMap","ResizeObserver","method","apply"],"mappings":"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","file":"static/js/14.61a5aae6.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nvar getScrollParent = function getScrollParent(node) {\n  var parent = node;\n\n  while (parent = parent.parentElement) {\n    var overflowYVal = getComputedStyle(parent, null).getPropertyValue(\"overflow-y\");\n    if (parent === document.body) return window;\n    if (overflowYVal === \"auto\" || overflowYVal === \"scroll\") return parent;\n  }\n\n  return window;\n};\n\nvar offsetTill = function offsetTill(node, target) {\n  var current = node;\n  var offset = 0; // If target is not an offsetParent itself, subtract its offsetTop and set correct target\n\n  if (target.firstChild && target.firstChild.offsetParent !== target) {\n    offset += node.offsetTop - target.offsetTop;\n    target = node.offsetParent;\n    offset += -node.offsetTop;\n  }\n\n  do {\n    offset += current.offsetTop;\n    current = current.offsetParent;\n  } while (current && current !== target);\n\n  return offset;\n};\n\nvar stickyProp = null;\n\nif (typeof CSS !== \"undefined\" && CSS.supports) {\n  if (CSS.supports(\"position\", \"sticky\")) stickyProp = \"sticky\";else if (CSS.supports(\"position\", \"-webkit-sticky\")) stickyProp = \"-webkit-sticky\";\n} // Inspired by https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n\n\nvar passiveArg = false;\n\ntry {\n  var opts = Object.defineProperty({}, \"passive\", {\n    // eslint-disable-next-line getter-return\n    get: function get() {\n      passiveArg = {\n        passive: true\n      };\n    }\n  });\n  window.addEventListener(\"testPassive\", null, opts);\n  window.removeEventListener(\"testPassive\", null, opts);\n} catch (e) {}\n\nvar StickyBox = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(StickyBox, _React$Component);\n\n  function StickyBox(props) {\n    var _this = _React$Component.call(this, props) || this;\n\n    _this.addListener = function (element, event, handler, passive) {\n      element.addEventListener(event, handler, passive);\n\n      _this.unsubscribes.push(function () {\n        return element.removeEventListener(event, handler);\n      });\n    };\n\n    _this.addResizeObserver = function (node, handler) {\n      var ro = new ResizeObserver(handler);\n      ro.observe(node);\n\n      _this.unsubscribes.push(function () {\n        return ro.disconnect();\n      });\n    };\n\n    _this.registerContainerRef = function (n) {\n      if (!stickyProp) return;\n      _this.node = n;\n\n      if (n) {\n        _this.scrollPane = getScrollParent(_this.node);\n        _this.latestScrollY = _this.scrollPane === window ? window.scrollY : _this.scrollPane.scrollTop;\n\n        _this.addListener(_this.scrollPane, \"scroll\", _this.handleScroll, passiveArg);\n\n        _this.addListener(_this.scrollPane, \"mousewheel\", _this.handleScroll, passiveArg);\n\n        if (_this.scrollPane === window) {\n          _this.addListener(window, \"resize\", _this.handleWindowResize);\n\n          _this.handleWindowResize();\n        } else {\n          _this.addResizeObserver(_this.scrollPane, _this.handleScrollPaneResize);\n\n          _this.handleScrollPaneResize();\n        }\n\n        _this.addResizeObserver(_this.node.parentNode, _this.handleParentNodeResize);\n\n        _this.handleParentNodeResize();\n\n        _this.addResizeObserver(_this.node, _this.handleNodeResize);\n\n        _this.handleNodeResize({\n          initial: true\n        });\n\n        _this.initial();\n      } else {\n        _this.unsubscribes.forEach(function (fn) {\n          return fn();\n        });\n\n        _this.unsubscribes = [];\n        _this.scrollPane = null;\n      }\n    };\n\n    _this.getCurrentOffset = function () {\n      if (_this.mode === \"relative\") return _this.offset;\n      var _this$props = _this.props,\n          offsetTop = _this$props.offsetTop,\n          offsetBottom = _this$props.offsetBottom;\n\n      if (_this.mode === \"stickyTop\") {\n        return Math.max(0, _this.scrollPaneOffset + _this.latestScrollY - _this.naturalTop + offsetTop);\n      }\n\n      if (_this.mode === \"stickyBottom\") {\n        return Math.max(0, _this.scrollPaneOffset + _this.latestScrollY + _this.viewPortHeight - (_this.naturalTop + _this.nodeHeight + offsetBottom));\n      }\n    };\n\n    _this.handleWindowResize = function () {\n      _this.viewPortHeight = window.innerHeight;\n      _this.scrollPaneOffset = 0;\n\n      _this.handleScroll();\n    };\n\n    _this.handleScrollPaneResize = function () {\n      _this.viewPortHeight = _this.scrollPane.offsetHeight;\n\n      if (process.env.NODE_ENV !== \"production\" && _this.viewPortHeight === 0) {\n        console.warn(\"react-sticky-box's scroll pane has a height of 0. This seems odd. Please check this node:\", _this.scrollPane);\n      } // Only applicable if scrollPane is an offsetParent\n\n\n      if (_this.scrollPane.firstChild.offsetParent === _this.scrollPane) {\n        _this.scrollPaneOffset = _this.scrollPane.getBoundingClientRect().top;\n      } else {\n        _this.scrollPaneOffset = 0;\n      }\n\n      _this.handleScroll();\n    };\n\n    _this.handleParentNodeResize = function () {\n      var parentNode = _this.node.parentNode;\n      var computedParentStyle = getComputedStyle(parentNode, null);\n      var parentPaddingTop = parseInt(computedParentStyle.getPropertyValue(\"padding-top\"), 10);\n      var parentPaddingBottom = parseInt(computedParentStyle.getPropertyValue(\"padding-bottom\"), 10);\n      _this.naturalTop = offsetTill(parentNode, _this.scrollPane) + parentPaddingTop + _this.scrollPaneOffset;\n      var oldParentHeight = _this.parentHeight;\n      _this.parentHeight = parentNode.getBoundingClientRect().height - (parentPaddingTop + parentPaddingBottom);\n\n      if (_this.mode === \"relative\") {\n        if (_this.props.bottom) {\n          _this.changeMode(\"relative\");\n        } else {\n          // If parent height decreased...\n          if (oldParentHeight > _this.parentHeight) {\n            _this.changeToStickyBottomIfBoxTooLow(_this.latestScrollY);\n          }\n        }\n      }\n\n      if (oldParentHeight !== _this.parentHeight && _this.mode === \"relative\") {\n        _this.latestScrollY = Number.POSITIVE_INFINITY;\n\n        _this.handleScroll();\n      }\n    };\n\n    _this.handleNodeResize = function (_temp) {\n      var _ref = _temp === void 0 ? {} : _temp,\n          initial = _ref.initial;\n\n      var prevHeight = _this.nodeHeight;\n      _this.nodeHeight = _this.node.getBoundingClientRect().height;\n\n      if (!initial && prevHeight !== _this.nodeHeight) {\n        var _this$props2 = _this.props,\n            offsetTop = _this$props2.offsetTop,\n            offsetBottom = _this$props2.offsetBottom,\n            bottom = _this$props2.bottom;\n\n        if (_this.nodeHeight + offsetTop + offsetBottom <= _this.viewPortHeight) {\n          // Just make it sticky if node smaller than viewport\n          _this.mode = undefined;\n\n          _this.initial();\n        } else {\n          var diff = prevHeight - _this.nodeHeight;\n          var lowestPossible = _this.parentHeight - _this.nodeHeight;\n          var nextOffset = Math.min(lowestPossible, _this.getCurrentOffset() + (bottom ? diff : 0));\n          _this.offset = Math.max(0, nextOffset);\n          if (!bottom || _this.mode !== \"stickyBottom\") _this.changeMode(\"relative\");\n        }\n      }\n    };\n\n    _this.handleScroll = function () {\n      var _this$props3 = _this.props,\n          offsetTop = _this$props3.offsetTop,\n          offsetBottom = _this$props3.offsetBottom;\n      var scrollY = _this.scrollPane === window ? window.scrollY : _this.scrollPane.scrollTop;\n      if (scrollY === _this.latestScrollY) return;\n\n      if (_this.nodeHeight + offsetTop + offsetBottom <= _this.viewPortHeight) {\n        // Just make it sticky if node smaller than viewport\n        _this.initial();\n\n        _this.latestScrollY = scrollY;\n        return;\n      }\n\n      var scrollDelta = scrollY - _this.latestScrollY;\n      _this.offset = _this.getCurrentOffset();\n\n      if (scrollDelta > 0) {\n        // scroll down\n        if (_this.mode === \"stickyTop\") {\n          if (scrollY + _this.scrollPaneOffset + offsetTop > _this.naturalTop) {\n            if (scrollY + _this.scrollPaneOffset + _this.viewPortHeight <= _this.naturalTop + _this.nodeHeight + _this.offset + offsetBottom) {\n              _this.changeMode(\"relative\");\n            } else {\n              _this.changeMode(\"stickyBottom\");\n            }\n          }\n        } else if (_this.mode === \"relative\") {\n          _this.changeToStickyBottomIfBoxTooLow(scrollY);\n        }\n      } else {\n        // scroll up\n        if (_this.mode === \"stickyBottom\") {\n          if (_this.scrollPaneOffset + scrollY + _this.viewPortHeight < _this.naturalTop + _this.parentHeight + offsetBottom) {\n            if (_this.scrollPaneOffset + scrollY + offsetTop >= _this.naturalTop + _this.offset) {\n              _this.changeMode(\"relative\");\n            } else {\n              _this.changeMode(\"stickyTop\");\n            }\n          }\n        } else if (_this.mode === \"relative\") {\n          if (_this.scrollPaneOffset + scrollY + offsetTop < _this.naturalTop + _this.offset) {\n            _this.changeMode(\"stickyTop\");\n          }\n        }\n      }\n\n      _this.latestScrollY = scrollY;\n    };\n\n    if (props.offset && process.env.NODE_ENV !== \"production\") {\n      console.warn(\"react-sticky-box's \\\"offset\\\" prop is deprecated. Please use \\\"offsetTop\\\" instead. It'll be removed in v0.8.\");\n    }\n\n    _this.unsubscribes = [];\n    return _this;\n  }\n\n  var _proto = StickyBox.prototype;\n\n  _proto.changeMode = function changeMode(newMode) {\n    var _this$props4 = this.props,\n        onChangeMode = _this$props4.onChangeMode,\n        offsetTop = _this$props4.offsetTop,\n        offsetBottom = _this$props4.offsetBottom,\n        bottom = _this$props4.bottom;\n    if (this.mode !== newMode) onChangeMode(this.mode, newMode);\n    this.mode = newMode;\n\n    if (newMode === \"relative\") {\n      this.node.style.position = \"relative\";\n\n      if (bottom) {\n        var nextBottom = Math.max(0, this.parentHeight - this.nodeHeight - this.offset);\n        this.node.style.bottom = nextBottom + \"px\";\n      } else {\n        this.node.style.top = this.offset + \"px\";\n      }\n    } else {\n      this.node.style.position = stickyProp;\n\n      if (newMode === \"stickyBottom\") {\n        if (bottom) {\n          this.node.style.bottom = offsetBottom + \"px\";\n        } else {\n          this.node.style.top = this.viewPortHeight - this.nodeHeight - offsetBottom + \"px\";\n        }\n      } else {\n        // stickyTop\n        if (bottom) {\n          this.node.style.bottom = this.viewPortHeight - this.nodeHeight - offsetBottom + \"px\";\n        } else {\n          this.node.style.top = offsetTop + \"px\";\n        }\n      }\n    }\n\n    this.offset = this.getCurrentOffset();\n  };\n\n  _proto.initial = function initial() {\n    var bottom = this.props.bottom;\n\n    if (bottom) {\n      if (this.mode !== \"stickyBottom\") this.changeMode(\"stickyBottom\");\n    } else {\n      if (this.mode !== \"stickyTop\") this.changeMode(\"stickyTop\");\n    }\n  };\n\n  _proto.changeToStickyBottomIfBoxTooLow = function changeToStickyBottomIfBoxTooLow(scrollY) {\n    var offsetBottom = this.props.offsetBottom;\n\n    if (scrollY + this.scrollPaneOffset + this.viewPortHeight >= this.naturalTop + this.nodeHeight + this.offset + offsetBottom) {\n      this.changeMode(\"stickyBottom\");\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props5 = this.props,\n        children = _this$props5.children,\n        className = _this$props5.className,\n        style = _this$props5.style;\n    return React.createElement(\"div\", {\n      className: className,\n      style: style,\n      ref: this.registerContainerRef\n    }, children);\n  };\n\n  return StickyBox;\n}(React.Component);\n\nexport { StickyBox as default };\nStickyBox.defaultProps = {\n  onChangeMode: function onChangeMode() {},\n  offsetTop: 0,\n  offsetBottom: 0\n};\nprocess.env.NODE_ENV !== \"production\" ? StickyBox.propTypes = {\n  onChangeMode: PropTypes.func,\n  offsetTop: PropTypes.number,\n  offsetBottom: PropTypes.number,\n  bottom: PropTypes.bool\n} : void 0;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inheritsLoose;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = function () {\n  if (typeof Map !== 'undefined') {\n    return Map;\n  }\n  /**\r\n   * Returns index in provided array that matches the specified key.\r\n   *\r\n   * @param {Array<Array>} arr\r\n   * @param {*} key\r\n   * @returns {number}\r\n   */\n\n\n  function getIndex(arr, key) {\n    var result = -1;\n    arr.some(function (entry, index) {\n      if (entry[0] === key) {\n        result = index;\n        return true;\n      }\n\n      return false;\n    });\n    return result;\n  }\n\n  return (\n    /** @class */\n    function () {\n      function class_1() {\n        this.__entries__ = [];\n      }\n\n      Object.defineProperty(class_1.prototype, \"size\", {\n        /**\r\n         * @returns {boolean}\r\n         */\n        get: function get() {\n          return this.__entries__.length;\n        },\n        enumerable: true,\n        configurable: true\n      });\n      /**\r\n       * @param {*} key\r\n       * @returns {*}\r\n       */\n\n      class_1.prototype.get = function (key) {\n        var index = getIndex(this.__entries__, key);\n        var entry = this.__entries__[index];\n        return entry && entry[1];\n      };\n      /**\r\n       * @param {*} key\r\n       * @param {*} value\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.set = function (key, value) {\n        var index = getIndex(this.__entries__, key);\n\n        if (~index) {\n          this.__entries__[index][1] = value;\n        } else {\n          this.__entries__.push([key, value]);\n        }\n      };\n      /**\r\n       * @param {*} key\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.delete = function (key) {\n        var entries = this.__entries__;\n        var index = getIndex(entries, key);\n\n        if (~index) {\n          entries.splice(index, 1);\n        }\n      };\n      /**\r\n       * @param {*} key\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.has = function (key) {\n        return !!~getIndex(this.__entries__, key);\n      };\n      /**\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.clear = function () {\n        this.__entries__.splice(0);\n      };\n      /**\r\n       * @param {Function} callback\r\n       * @param {*} [ctx=null]\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.forEach = function (callback, ctx) {\n        if (ctx === void 0) {\n          ctx = null;\n        }\n\n        for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\n          var entry = _a[_i];\n          callback.call(ctx, entry[1], entry[0]);\n        }\n      };\n\n      return class_1;\n    }()\n  );\n}();\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\n\n\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document; // Returns global object of a current environment.\n\nvar global$1 = function () {\n  if (typeof global !== 'undefined' && global.Math === Math) {\n    return global;\n  }\n\n  if (typeof self !== 'undefined' && self.Math === Math) {\n    return self;\n  }\n\n  if (typeof window !== 'undefined' && window.Math === Math) {\n    return window;\n  } // eslint-disable-next-line no-new-func\n\n\n  return Function('return this')();\n}();\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\n\n\nvar requestAnimationFrame$1 = function () {\n  if (typeof requestAnimationFrame === 'function') {\n    // It's required to use a bounded function because IE sometimes throws\n    // an \"Invalid calling object\" error if rAF is invoked without the global\n    // object on the left hand side.\n    return requestAnimationFrame.bind(global$1);\n  }\n\n  return function (callback) {\n    return setTimeout(function () {\n      return callback(Date.now());\n    }, 1000 / 60);\n  };\n}(); // Defines minimum timeout before adding a trailing call.\n\n\nvar trailingTimeout = 2;\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\n\nfunction throttle(callback, delay) {\n  var leadingCall = false,\n      trailingCall = false,\n      lastCallTime = 0;\n  /**\r\n   * Invokes the original callback function and schedules new invocation if\r\n   * the \"proxy\" was called during current request.\r\n   *\r\n   * @returns {void}\r\n   */\n\n  function resolvePending() {\n    if (leadingCall) {\n      leadingCall = false;\n      callback();\n    }\n\n    if (trailingCall) {\n      proxy();\n    }\n  }\n  /**\r\n   * Callback invoked after the specified delay. It will further postpone\r\n   * invocation of the original function delegating it to the\r\n   * requestAnimationFrame.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  function timeoutCallback() {\n    requestAnimationFrame$1(resolvePending);\n  }\n  /**\r\n   * Schedules invocation of the original function.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  function proxy() {\n    var timeStamp = Date.now();\n\n    if (leadingCall) {\n      // Reject immediately following calls.\n      if (timeStamp - lastCallTime < trailingTimeout) {\n        return;\n      } // Schedule new call to be in invoked when the pending one is resolved.\n      // This is important for \"transitions\" which never actually start\n      // immediately so there is a chance that we might miss one if change\n      // happens amids the pending invocation.\n\n\n      trailingCall = true;\n    } else {\n      leadingCall = true;\n      trailingCall = false;\n      setTimeout(timeoutCallback, delay);\n    }\n\n    lastCallTime = timeStamp;\n  }\n\n  return proxy;\n} // Minimum delay before invoking the update of observers.\n\n\nvar REFRESH_DELAY = 20; // A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\n\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight']; // Check if MutationObserver is available.\n\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\n\nvar ResizeObserverController =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of ResizeObserverController.\r\n   *\r\n   * @private\r\n   */\n  function ResizeObserverController() {\n    /**\r\n     * Indicates whether DOM listeners have been added.\r\n     *\r\n     * @private {boolean}\r\n     */\n    this.connected_ = false;\n    /**\r\n     * Tells that controller has subscribed for Mutation Events.\r\n     *\r\n     * @private {boolean}\r\n     */\n\n    this.mutationEventsAdded_ = false;\n    /**\r\n     * Keeps reference to the instance of MutationObserver.\r\n     *\r\n     * @private {MutationObserver}\r\n     */\n\n    this.mutationsObserver_ = null;\n    /**\r\n     * A list of connected observers.\r\n     *\r\n     * @private {Array<ResizeObserverSPI>}\r\n     */\n\n    this.observers_ = [];\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n  }\n  /**\r\n   * Adds observer to observers list.\r\n   *\r\n   * @param {ResizeObserverSPI} observer - Observer to be added.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n      this.observers_.push(observer);\n    } // Add listeners if they haven't been added yet.\n\n\n    if (!this.connected_) {\n      this.connect_();\n    }\n  };\n  /**\r\n   * Removes observer from observers list.\r\n   *\r\n   * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer); // Remove observer if it's present in registry.\n\n    if (~index) {\n      observers.splice(index, 1);\n    } // Remove listeners if controller has no connected observers.\n\n\n    if (!observers.length && this.connected_) {\n      this.disconnect_();\n    }\n  };\n  /**\r\n   * Invokes the update of observers. It will continue running updates insofar\r\n   * it detects changes.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_(); // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n\n    if (changesDetected) {\n      this.refresh();\n    }\n  };\n  /**\r\n   * Updates every observer from observers list and notifies them of queued\r\n   * entries.\r\n   *\r\n   * @private\r\n   * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n   *      dimensions of it's elements.\r\n   */\n\n\n  ResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n      return observer.gatherActive(), observer.hasActive();\n    }); // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n\n    activeObservers.forEach(function (observer) {\n      return observer.broadcastActive();\n    });\n    return activeObservers.length > 0;\n  };\n  /**\r\n   * Initializes DOM listeners.\r\n   *\r\n   * @private\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n      return;\n    } // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n\n\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n    window.addEventListener('resize', this.refresh);\n\n    if (mutationObserverSupported) {\n      this.mutationsObserver_ = new MutationObserver(this.refresh);\n      this.mutationsObserver_.observe(document, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    } else {\n      document.addEventListener('DOMSubtreeModified', this.refresh);\n      this.mutationEventsAdded_ = true;\n    }\n\n    this.connected_ = true;\n  };\n  /**\r\n   * Removes DOM listeners.\r\n   *\r\n   * @private\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n      return;\n    }\n\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n\n    if (this.mutationsObserver_) {\n      this.mutationsObserver_.disconnect();\n    }\n\n    if (this.mutationEventsAdded_) {\n      document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n  };\n  /**\r\n   * \"Transitionend\" event handler.\r\n   *\r\n   * @private\r\n   * @param {TransitionEvent} event\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\n    var _b = _a.propertyName,\n        propertyName = _b === void 0 ? '' : _b; // Detect whether transition may affect dimensions of an element.\n\n    var isReflowProperty = transitionKeys.some(function (key) {\n      return !!~propertyName.indexOf(key);\n    });\n\n    if (isReflowProperty) {\n      this.refresh();\n    }\n  };\n  /**\r\n   * Returns instance of the ResizeObserverController.\r\n   *\r\n   * @returns {ResizeObserverController}\r\n   */\n\n\n  ResizeObserverController.getInstance = function () {\n    if (!this.instance_) {\n      this.instance_ = new ResizeObserverController();\n    }\n\n    return this.instance_;\n  };\n  /**\r\n   * Holds reference to the controller's instance.\r\n   *\r\n   * @private {ResizeObserverController}\r\n   */\n\n\n  ResizeObserverController.instance_ = null;\n  return ResizeObserverController;\n}();\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\n\n\nvar defineConfigurable = function defineConfigurable(target, props) {\n  for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\n    var key = _a[_i];\n    Object.defineProperty(target, key, {\n      value: props[key],\n      enumerable: false,\n      writable: false,\n      configurable: true\n    });\n  }\n\n  return target;\n};\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\n\n\nvar getWindowOf = function getWindowOf(target) {\n  // Assume that the element is an instance of Node, which means that it\n  // has the \"ownerDocument\" property from which we can retrieve a\n  // corresponding global object.\n  var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView; // Return the local global object if it's not possible extract one from\n  // provided element.\n\n  return ownerGlobal || global$1;\n}; // Placeholder of an empty content rectangle.\n\n\nvar emptyRect = createRectInit(0, 0, 0, 0);\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\n\nfunction toFloat(value) {\n  return parseFloat(value) || 0;\n}\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\n\n\nfunction getBordersSize(styles) {\n  var positions = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    positions[_i - 1] = arguments[_i];\n  }\n\n  return positions.reduce(function (size, position) {\n    var value = styles['border-' + position + '-width'];\n    return size + toFloat(value);\n  }, 0);\n}\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\n\n\nfunction getPaddings(styles) {\n  var positions = ['top', 'right', 'bottom', 'left'];\n  var paddings = {};\n\n  for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\n    var position = positions_1[_i];\n    var value = styles['padding-' + position];\n    paddings[position] = toFloat(value);\n  }\n\n  return paddings;\n}\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getSVGContentRect(target) {\n  var bbox = target.getBBox();\n  return createRectInit(0, 0, bbox.width, bbox.height);\n}\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getHTMLElementContentRect(target) {\n  // Client width & height properties can't be\n  // used exclusively as they provide rounded values.\n  var clientWidth = target.clientWidth,\n      clientHeight = target.clientHeight; // By this condition we can catch all non-replaced inline, hidden and\n  // detached elements. Though elements with width & height properties less\n  // than 0.5 will be discarded as well.\n  //\n  // Without it we would need to implement separate methods for each of\n  // those cases and it's not possible to perform a precise and performance\n  // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n  // gives wrong results for elements with width & height less than 0.5.\n\n  if (!clientWidth && !clientHeight) {\n    return emptyRect;\n  }\n\n  var styles = getWindowOf(target).getComputedStyle(target);\n  var paddings = getPaddings(styles);\n  var horizPad = paddings.left + paddings.right;\n  var vertPad = paddings.top + paddings.bottom; // Computed styles of width & height are being used because they are the\n  // only dimensions available to JS that contain non-rounded values. It could\n  // be possible to utilize the getBoundingClientRect if only it's data wasn't\n  // affected by CSS transformations let alone paddings, borders and scroll bars.\n\n  var width = toFloat(styles.width),\n      height = toFloat(styles.height); // Width & height include paddings and borders when the 'border-box' box\n  // model is applied (except for IE).\n\n  if (styles.boxSizing === 'border-box') {\n    // Following conditions are required to handle Internet Explorer which\n    // doesn't include paddings and borders to computed CSS dimensions.\n    //\n    // We can say that if CSS dimensions + paddings are equal to the \"client\"\n    // properties then it's either IE, and thus we don't need to subtract\n    // anything, or an element merely doesn't have paddings/borders styles.\n    if (Math.round(width + horizPad) !== clientWidth) {\n      width -= getBordersSize(styles, 'left', 'right') + horizPad;\n    }\n\n    if (Math.round(height + vertPad) !== clientHeight) {\n      height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n    }\n  } // Following steps can't be applied to the document's root element as its\n  // client[Width/Height] properties represent viewport area of the window.\n  // Besides, it's as well not necessary as the <html> itself neither has\n  // rendered scroll bars nor it can be clipped.\n\n\n  if (!isDocumentElement(target)) {\n    // In some browsers (only in Firefox, actually) CSS width & height\n    // include scroll bars size which can be removed at this step as scroll\n    // bars are the only difference between rounded dimensions + paddings\n    // and \"client\" properties, though that is not always true in Chrome.\n    var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n    var horizScrollbar = Math.round(height + vertPad) - clientHeight; // Chrome has a rather weird rounding of \"client\" properties.\n    // E.g. for an element with content width of 314.2px it sometimes gives\n    // the client width of 315px and for the width of 314.7px it may give\n    // 314px. And it doesn't happen all the time. So just ignore this delta\n    // as a non-relevant.\n\n    if (Math.abs(vertScrollbar) !== 1) {\n      width -= vertScrollbar;\n    }\n\n    if (Math.abs(horizScrollbar) !== 1) {\n      height -= horizScrollbar;\n    }\n  }\n\n  return createRectInit(paddings.left, paddings.top, width, height);\n}\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\n\n\nvar isSVGGraphicsElement = function () {\n  // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n  // interface.\n  if (typeof SVGGraphicsElement !== 'undefined') {\n    return function (target) {\n      return target instanceof getWindowOf(target).SVGGraphicsElement;\n    };\n  } // If it's so, then check that element is at least an instance of the\n  // SVGElement and that it has the \"getBBox\" method.\n  // eslint-disable-next-line no-extra-parens\n\n\n  return function (target) {\n    return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function';\n  };\n}();\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\n\n\nfunction isDocumentElement(target) {\n  return target === getWindowOf(target).document.documentElement;\n}\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getContentRect(target) {\n  if (!isBrowser) {\n    return emptyRect;\n  }\n\n  if (isSVGGraphicsElement(target)) {\n    return getSVGContentRect(target);\n  }\n\n  return getHTMLElementContentRect(target);\n}\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\n\n\nfunction createReadOnlyRect(_a) {\n  var x = _a.x,\n      y = _a.y,\n      width = _a.width,\n      height = _a.height; // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n\n  var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n  var rect = Object.create(Constr.prototype); // Rectangle's properties are not writable and non-enumerable.\n\n  defineConfigurable(rect, {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    top: y,\n    right: x + width,\n    bottom: height + y,\n    left: x\n  });\n  return rect;\n}\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction createRectInit(x, y, width, height) {\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height\n  };\n}\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\n\n\nvar ResizeObservation =\n/** @class */\nfunction () {\n  /**\r\n   * Creates an instance of ResizeObservation.\r\n   *\r\n   * @param {Element} target - Element to be observed.\r\n   */\n  function ResizeObservation(target) {\n    /**\r\n     * Broadcasted width of content rectangle.\r\n     *\r\n     * @type {number}\r\n     */\n    this.broadcastWidth = 0;\n    /**\r\n     * Broadcasted height of content rectangle.\r\n     *\r\n     * @type {number}\r\n     */\n\n    this.broadcastHeight = 0;\n    /**\r\n     * Reference to the last observed content rectangle.\r\n     *\r\n     * @private {DOMRectInit}\r\n     */\n\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n    this.target = target;\n  }\n  /**\r\n   * Updates content rectangle and tells whether it's width or height properties\r\n   * have changed since the last broadcast.\r\n   *\r\n   * @returns {boolean}\r\n   */\n\n\n  ResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n    this.contentRect_ = rect;\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n  };\n  /**\r\n   * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n   * from the corresponding properties of the last observed content rectangle.\r\n   *\r\n   * @returns {DOMRectInit} Last observed content rectangle.\r\n   */\n\n\n  ResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n    return rect;\n  };\n\n  return ResizeObservation;\n}();\n\nvar ResizeObserverEntry =\n/** @class */\nfunction () {\n  /**\r\n   * Creates an instance of ResizeObserverEntry.\r\n   *\r\n   * @param {Element} target - Element that is being observed.\r\n   * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n   */\n  function ResizeObserverEntry(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit); // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n\n    defineConfigurable(this, {\n      target: target,\n      contentRect: contentRect\n    });\n  }\n\n  return ResizeObserverEntry;\n}();\n\nvar ResizeObserverSPI =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of ResizeObserver.\r\n   *\r\n   * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n   *      when one of the observed elements changes it's content dimensions.\r\n   * @param {ResizeObserverController} controller - Controller instance which\r\n   *      is responsible for the updates of observer.\r\n   * @param {ResizeObserver} callbackCtx - Reference to the public\r\n   *      ResizeObserver instance which will be passed to callback function.\r\n   */\n  function ResizeObserverSPI(callback, controller, callbackCtx) {\n    /**\r\n     * Collection of resize observations that have detected changes in dimensions\r\n     * of elements.\r\n     *\r\n     * @private {Array<ResizeObservation>}\r\n     */\n    this.activeObservations_ = [];\n    /**\r\n     * Registry of the ResizeObservation instances.\r\n     *\r\n     * @private {Map<Element, ResizeObservation>}\r\n     */\n\n    this.observations_ = new MapShim();\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n  }\n  /**\r\n   * Starts observing provided element.\r\n   *\r\n   * @param {Element} target - Element to be observed.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    } // Do nothing if current environment doesn't have the Element interface.\n\n\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n      return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n      throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_; // Do nothing if element is already being observed.\n\n    if (observations.has(target)) {\n      return;\n    }\n\n    observations.set(target, new ResizeObservation(target));\n    this.controller_.addObserver(this); // Force the update of observations.\n\n    this.controller_.refresh();\n  };\n  /**\r\n   * Stops observing provided element.\r\n   *\r\n   * @param {Element} target - Element to stop observing.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    } // Do nothing if current environment doesn't have the Element interface.\n\n\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n      return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n      throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_; // Do nothing if element is not being observed.\n\n    if (!observations.has(target)) {\n      return;\n    }\n\n    observations.delete(target);\n\n    if (!observations.size) {\n      this.controller_.removeObserver(this);\n    }\n  };\n  /**\r\n   * Stops observing all elements.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n  };\n  /**\r\n   * Collects observation instances the associated element of which has changed\r\n   * it's content rectangle.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.gatherActive = function () {\n    var _this = this;\n\n    this.clearActive();\n    this.observations_.forEach(function (observation) {\n      if (observation.isActive()) {\n        _this.activeObservations_.push(observation);\n      }\n    });\n  };\n  /**\r\n   * Invokes initial callback function with a list of ResizeObserverEntry\r\n   * instances collected from active resize observations.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n      return;\n    }\n\n    var ctx = this.callbackCtx_; // Create ResizeObserverEntry instance for every active observation.\n\n    var entries = this.activeObservations_.map(function (observation) {\n      return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n  };\n  /**\r\n   * Clears the collection of active observations.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n  };\n  /**\r\n   * Tells whether observer has active observations.\r\n   *\r\n   * @returns {boolean}\r\n   */\n\n\n  ResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n  };\n\n  return ResizeObserverSPI;\n}(); // Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\n\n\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\n\nvar ResizeObserver =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of ResizeObserver.\r\n   *\r\n   * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n   *      dimensions of the observed elements change.\r\n   */\n  function ResizeObserver(callback) {\n    if (!(this instanceof ResizeObserver)) {\n      throw new TypeError('Cannot call a class as a function.');\n    }\n\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n    observers.set(this, observer);\n  }\n\n  return ResizeObserver;\n}(); // Expose public methods of ResizeObserver.\n\n\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n  ResizeObserver.prototype[method] = function () {\n    var _a;\n\n    return (_a = observers.get(this))[method].apply(_a, arguments);\n  };\n});\n\nvar index = function () {\n  // Export existing implementation if available.\n  if (typeof global$1.ResizeObserver !== 'undefined') {\n    return global$1.ResizeObserver;\n  }\n\n  return ResizeObserver;\n}();\n\nexport default index;"],"sourceRoot":""}